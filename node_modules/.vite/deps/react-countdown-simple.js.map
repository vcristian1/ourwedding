{
  "version": 3,
  "sources": ["../../react-countdown-simple/dist/esm/index.js", "../../react-countdown-simple/dist/esm/date-time/index.js", "../../react-countdown-simple/dist/esm/colon/index.js", "../../react-countdown-simple/dist/esm/helper.js", "../../react-countdown-simple/dist/esm/types.js"],
  "sourcesContent": ["import React, { Fragment } from 'react';\n// components\nimport DateTime from './date-time';\nimport Colon from './colon';\n// helper\nimport { getType, useCountdown } from './helper';\n// styles\nimport './styles.css';\nvar Countdown = function (_a) {\n    var disableTypes = _a.disableTypes, formatType = _a.formatType, targetDate = _a.targetDate, renderer = _a.renderer;\n    var dateData = useCountdown(targetDate);\n    var types = getType(formatType);\n    var rendererProps = {\n        days: dateData[0],\n        hours: dateData[1],\n        minutes: dateData[2],\n        seconds: dateData[3],\n    };\n    var renderDates = dateData.map(function (value, index) { return (React.createElement(Fragment, { key: index },\n        React.createElement(DateTime, { value: value, type: types[index], disableTypes: disableTypes }),\n        React.createElement(Colon, { data: dateData, index: index }))); });\n    return (React.createElement(\"div\", { className: \"react-countdown-simple\" }, renderer ? renderer(rendererProps) : renderDates));\n};\nexport default Countdown;\n", "import React from 'react';\nvar DateTime = function (_a) {\n    var value = _a.value, type = _a.type, disableTypes = _a.disableTypes;\n    var transformedValue = value.toString().padStart(2, '0');\n    var dataTestsId = \"date-time-\".concat(type.toLowerCase());\n    return (React.createElement(\"strong\", { className: \"react-countdown-simple__date-time\", \"data-testid\": dataTestsId },\n        React.createElement(\"span\", null, transformedValue),\n        !disableTypes && type));\n};\nexport default DateTime;\n", "import React from 'react';\nvar Colon = function (_a) {\n    var index = _a.index, data = _a.data;\n    return index !== data.length - 1 ? (React.createElement(\"strong\", { className: \"react-countdown-simple__colon\" }, \":\")) : null;\n};\nexport default Colon;\n", "import { useEffect, useState } from \"react\";\nimport { EDateTime } from \"./types\";\nvar getDifference = function (countdownDate) {\n    return Math.round((countdownDate - new Date().getTime()) / 1000);\n};\nexport var getReturnValues = function (countdown) {\n    var days = Math.floor(countdown / (60 * 60 * 24));\n    var hours = Math.floor((countdown % (60 * 60 * 24)) / (60 * 60));\n    var minutes = Math.floor((countdown % (60 * 60)) / 60);\n    var seconds = Math.floor(countdown % 60);\n    return [days, hours, minutes, seconds];\n};\nexport var getType = function (formatType) {\n    return formatType ? EDateTime[formatType].split(\"_\") : EDateTime.D_H_M_S.split(\"_\");\n};\nexport var useCountdown = function (date) {\n    var countdownDate = new Date(date).getTime();\n    var _a = useState(getDifference(countdownDate)), countdown = _a[0], setCountDown = _a[1];\n    useEffect(function () {\n        if (getDifference(countdownDate) <= 0) {\n            setCountDown(0);\n            return function () { };\n        }\n        var interval = setInterval(function () {\n            setCountDown(getDifference(countdownDate));\n        }, 1000);\n        return function () { return clearInterval(interval); };\n    }, [countdown, countdownDate]);\n    return getReturnValues(countdown);\n};\n", "export var EDateTime;\n(function (EDateTime) {\n    EDateTime[\"D_H_M_S\"] = \"D_H_M_S\";\n    EDateTime[\"d_h_m_s\"] = \"d_h_m_s\";\n    EDateTime[\"DD_HH_MM_SS\"] = \"DD_HH_MM_SS\";\n    EDateTime[\"dd_hh_mm_ss\"] = \"dd_hh_mm_ss\";\n})(EDateTime || (EDateTime = {}));\n"],
  "mappings": "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",
  "names": ["import_react", "React", "import_react", "React", "import_react", "EDateTime", "React"]
}
